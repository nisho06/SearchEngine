Analyze


1)

GET actors/_settings

show applied analyzers

2)

GET actors/_analyze
{
  "analyzer" : "my_analyzer",
  "text" : "திரிஷா என்ற கிருஷ்ணன்"
}

stop word - என்ற



3)

GET actors/_analyze
{
  "analyzer" : "my_analyzer",
  "text" : "நான் கண்டு கொண்டேன்"
}

stop word - நான்
stemmers - கண்டு, கொண்டேன்



4)

GET actors/_search
{
  "query": {
    "query_string": {
      "query": "இயக்குனர்"
    }
  }
}


5)


GET actors/_search
{
  "query": {
    "query_string": {
      "query": "திரிஷா கிருஷ்ணன்"
    }
  }
}



6)


GET actors/_search
{
  "query": {
    "query_string": {
      "query": "திரிஷா என்ற கிருஷ்ணன்"
    }
  }
}


Check whether the stop words applied or not


7)

GET actors/_search
{
"size": 20,
"query": {
  "match_phrase": {
    "அறிமுகம்": "இந்தியத் திரைப்பட நடிகை"
  }
}
}

Phrase queries - check the whole query phrase



8)

GET actors/_search
{
"size": 20,
"query": {
  "match": {
    "அறிமுகம்": "இந்தியத் திரைப்பட நடிகை"
  }
}

}

Query match - tokenize and search each tokens




9)

GET actors/_search
{
"query": {
  "bool": {
    "must": [
      {
        "match": {
          "பிறந்த_இடம்":{
           "query": "சென்னை"
            }
        }
      },
      {
        "match": {
          "அறிமுகம்":{
           "query": "தெலுங்கு"
            }
        }
      }

    ]
  }
}
}

Search queries using AND boolean operator




10)

GET actors/_search
{
"size": 20,
"query": {
  "bool": {
    "should": [
      {
        "match": {
          "பிறந்த_இடம்":{
           "query": "சென்னை"
            }
        }
      },
      {
        "match": {
          "அறிமுகம்":{
           "query": "தெலுங்கு"
            }
        }
      }

    ]
  }
}
}

Search queries using OR operator



11)

GET actors/_search
{
  "query": {
    "fuzzy": {
      "அறிமுக_படம்": {
        "value": "வெண்ணி"
      }
    }
  }
}

fuzzy query - miss spelled words (search all the combinations of correct words)



12)



GET actors/_search
{
"query": {
  "bool": {
    "must_not": [
      {
        "match": {
          "பிறந்த_இடம்":{
           "query": "சென்னை"
            }
        }
      },
      {
        "match": {
          "அறிமுகம்":{
           "query": "தெலுங்கு"
            }
        }
      },
      {
        "match": {
          "அறிமுகம்":{
           "query": "நடிகை"
            }
        }
      }

    ]
  }
}
}



must not boolean query - NOT operator




13)

GET actors/_search
{
  "query": {
    "regexp": {
      "அறிமுகம்": {
        "value": "r.*a"
      }
    }
  }
}


regex patterns - for english terms



14)

GET actors/_search
{
  "query": {
    "regexp": {
      "அறிமுகம்": {
        "value": "கன்.*ம்"
      }
    }
  }
}

regex patterns for tamil terms


15)


GET actors/_search
{
  "query": {
    "wildcard": {
      "அறிமுகம்": {
        "value": "இய*ர்",
        "boost": 1.0,
        "rewrite": "constant_score"
      }
    }
  }
}


wild card queries - (start and end letters is enough)



16)

GET actors/_search
{
  "size": 0,
  "aggs": {
    "பிறந்த_இடம்.aggregation": {
      "terms": {
        "field": "பிறந்த_இடம்.keyword",
        "size": 5,
        "order": {
          "_count": "desc"
        }
      }
    }
  }
}

Aggregation on the field பிறந்த_இடம்


17)


POST /actors/_search?size=0
{
  "aggs": {
    "பிறந்த_திகதி.aggregation": {
      "date_histogram": {
        "field": "பிறந்த_திகதி",
        "interval": "year",
        "format": "yyyy",
        "order": {
          "_count": "desc"
        }
      }
    }
  }
}


Aggregation queries on date fields



